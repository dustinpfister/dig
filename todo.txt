2.13.x - Hide methods revisited

    * added land.addHideMethod() method that allows for importing an external hide method into land.js
    * pulled top_down into a land.addHidMethod call that will come with land.js
    * added a hideKit api that helps with the authoring og hide methods
    * I made it so that setting total amounts of all cells is just part of the process via the hideKit api



    maybes:
    * more than one effect
    * can set which effect, as well as disable the effect in egg.js.

GAME MODES:

    * stack 64

        This is a mode where you play with a fixed 64 count of layers. You also have a fixed count of digs as well which as you might have guessed is also 64. This gives you just enough digs to completely clear the first layer, or dig all the way to the bottom to only dig one out of 64 land tiles. 

        The amount of pebble in the stack however is not fixed, as you level up the amount of pebble in the stack will go up.

        * At the top layer all the tiles have pebble, but contain only 1 pebble amounts
        * The number of loot tiles drops by one for every layer you drop down
        * At the bottom layer there is just one tile with pebble.
        * the single loot tile at the bottom is the most valuable.


IDEAS:

    MISC:

        * add a logo state that displays my animated logo.
        * DIG.over state triggered if you collect all pebble in the bottom layer.
        * DIG.over state displays the reason why the game ended. 


    ANIMATIONS: 

        * add a animated logo state
        * have an animated title screen.
        * state change animations

    Upgrades Menu:

        * Increase max digs
        * Increase damage per dig

    Land Menu:

        * Added a land Menu that can be used to choose where to dig, as well as buy new places to dig.
        * Unlocks higher level dig sites which have:
        * More Pebble (money)
        * More layers (You Can go deeper)
        * Harder rocks to break thew to go deeper

    Push.js

    * it would be nice to have a "push.js" tool

node push.js -s

// push.js will just do a

git status

node push.js -p "new commit"

// push.js push changes:

read file : push.json
bump push.appVersion
bump push.commitCount
write file > push.json
git add *
git commit -m "new commit"
git push


    JSON LEVEL DESIGN?
{

   layers : 1,
   totalPebble:1000,
   lootTiles : [
   
       {z:0,x:0,y:0,points : 5},
       {z:0,x:6,y:8,points : 10}
   
   ]


}